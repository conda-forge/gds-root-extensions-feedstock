{% set name = "gds-root-extensions" %}
{% set version = "3.0.1" %}

# dependencies
{% set gds_base_version = "3.0.1" %}
{% set gds_lsmp_version = "3.0.1" %}
{% set gds_frameio_version = "3.0.1" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://software.igwn.org/sources/source/{{ name }}-{{ version }}.tar.gz
  sha256: 3f8abcddbf0ec88b124cafd5ffc941a6e5a010565f5c3e4ad63fafd57f926092

build:
  number: 4
  skip: true  # [win]

requirements:
  build:
    - {{ compiler('cxx') }}
    - {{ stdlib("c") }}
    - make
    - pkg-config
  host:
    - gds-base >={{ gds_base_version }}
    - gds-base-crtools >={{ gds_base_version }}
    - gds-base-gdstrig >={{ gds_base_version }}
    - gds-frameio-base >={{ gds_frameio_version }}
    - gds-lsmp >={{ gds_lsmp_version }}
    - root_base
    # to read framecpp headers:
    - libboost-headers

outputs:
  - name: gds-root-extensions-base
    build:
      ignore_run_exports:
        # header required, no libraries
        - gds-base-crtools
      run_exports:
        - {{ pin_subpackage("gds-root-extensions-base", max_pin="x") }}
    requirements:
      build:
        - {{ compiler('cxx') }}
        - {{ stdlib("c") }}
      host:
        - gds-base >={{ gds_base_version }}
        - gds-base-crtools >={{ gds_base_version }}
        - gds-base-gdstrig >={{ gds_base_version }}
        - gds-frameio-base >={{ gds_frameio_version }}
        - gds-lsmp >={{ gds_lsmp_version }}
        - ldas-tools-al
        - ldas-tools-framecpp
        - root_base
      run:
        - gds-base >={{ gds_base_version }}
        - gds-frameio-base >={{ gds_frameio_version }}
        - gds-lsmp >={{ gds_lsmp_version }}
        - ldas-tools-al
        - ldas-tools-framecpp
        - root_base
    files:
      - include/gds/events/*.hh
      - lib/libgdsevent{{ SHLIB_EXT }}*
      - lib/libRframefast*
      - lib/libRframeio*
      - lib/libRgdsbase*
      - lib/libRgdsevent*
      - lib/libRgdscntr*
      - lib/libRgdsmath*
      - lib/libRgdstrig*
      - lib/libRxsil*
      - lib/pkgconfig/gdsevents.pc
      - share/gds/setup/root-setup
    test:
      commands:
        - test -f ${PREFIX}/lib/libRframeio${SHLIB_EXT}  # [not linux]
        - root -b -l -x -q -e 'gSystem->Load("libRframeio");'  # [linux]
        - root -b -l -x -q -e 'gSystem->Load("libRgdsevent");'  # [linux]
    about:
      home: https://wiki.ligo.org/Computing/DASWG/DMT
      dev_url: https://git.ligo.org/gds/gds.git
      license: GPL-2.0-only
      license_family: GPL
      license_file: COPYING
      summary: GDS ROOT extensions
      description: |
        GDS ROOT extensions

  - name: gds-root-extensions-crtools
    build:
      run_exports:
        - {{ pin_subpackage("gds-root-extensions-crtools", max_pin="x") }}
    requirements:
      build:
        - {{ compiler('cxx') }}
        - {{ stdlib("c") }}
      host:
        - gds-base >={{ gds_base_version }}
        - root_base
      run:
        - gds-base >={{ gds_base_version }}
        - {{ pin_subpackage("gds-root-extensions-base", exact=True) }}
        - root_base
    files:
      - lib/libRdmtsigp*
    test:
      commands:
        - test -f ${PREFIX}/lib/libRdmtsigp${SHLIB_EXT}  # [not linux]
        - root -b -x -q -e 'gSystem->Load("libRdmtsigp")'  # [linux]
    about:
      home: https://wiki.ligo.org/Computing/DASWG/DMT
      dev_url: https://git.ligo.org/gds/gds.git
      license: GPL-2.0-only
      license_family: GPL
      license_file: COPYING
      summary: GDS control room tools
      description: |
        GDS ROOT extensions for control rooms

about:
  home: https://wiki.ligo.org/Computing/DASWG/DMT
  dev_url: https://git.ligo.org/gds/gds.git
  license: GPL-2.0-only
  license_family: GPL
  license_file: COPYING
  summary: GDS ROOT extensions
  description: |
    GDS ROOT extensions

extra:
  recipe-maintainers:
    - duncanmmacleod
    - emaros
